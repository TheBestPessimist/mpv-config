local powerProfiles = {
    P = { name = "Power saver",         guid = "a1841308-3541-4fab-bc81-f71556f20b4a" , profile = "video-low-quality"},
    B = { name = "Balanced",            guid = "381b4222-f694-41f0-9685-ff5bb260df2e" , profile = "video-max-quality"},
    H = { name = "High performance",    guid = "8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c" , profile = "video-max-quality"}
}

local oldPowerProfile = powerProfiles.H

function autoSwitchProfile(success, result, error)
    local stdout = result.stdout

    local currentPowerProfile = nil
    for k, v in pairs(powerProfiles) do
        if stdout:find(v.guid, 1, true) then
            currentPowerProfile = v
            break
        end
    end

    -- if same profile, quit
    if oldPowerProfile == currentPowerProfile then return end

    -- update current power profile
    oldPowerProfile = currentPowerProfile

    mp.osd_message("Windows Power Profile changed to: " .. currentPowerProfile.name .. ".\n=> Switching to " .. currentPowerProfile.profile .. " profile.", 3)
    mp.commandv("apply-profile", currentPowerProfile.profile)
end

function getCurrentPowerProfile()
    mp.command_native_async({
          name = "subprocess",
          args = {"powercfg", "/GetActiveScheme"},
          capture_stdout = true,
    },
    autoSwitchProfile)
end

mp.add_periodic_timer(60, getCurrentPowerProfile)
